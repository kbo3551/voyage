<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.voyage.mapper.ProductMapper">
		
	<!-- 숙소-건물 목록/상세 조회를 위한 resultMap -->
	<resultMap type="com.gdu.voyage.vo.AccomBuilding" id="resultAccomBuilding">
		<id column="accom_building_no" property="accomBuildingNo"/>
		<result column="host_no" property="hostNo"/>
		<result column="accom_building_name" property="accomBuildingName"/>
		<result column="accom_building_description" property="accomBuildingDescription"/>
		<result column="accom_building_phone" property="accomBuildingPhone"/>
		<result column="accom_building_state" property="accomBuildingState"/>
		<result column="accom_building_state_admin" property="accomBuildingStateAdmin"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="roomCnt" property="roomCnt"/>
		<result column="cnt" property="cnt"/>
		<association property="accomAddress" javaType="com.gdu.voyage.vo.AccomAddress">
			<result column="accom_address_zip" property="accomAddressZip"/>
			<result column="accom_address_detail" property="accomAddressDetail"/>
		</association>
		<collection property="accomBuildingSpotList" ofType="com.gdu.voyage.vo.AccomBuildingSpot">
			<result column="accom_building_spot_no" property="accomBuildingSpotNo"/>
			<result column="accom_building_spot_name" property="accomBuildingSpotName"/>
			<result column="accom_building_spot_category" property="accomBuildingSpotCategory"/>
			<result column="accom_building_spot_description" property="accomBuildingSpotDescription"/>
		</collection>
		<collection property="accomBuildingImageList" ofType="com.gdu.voyage.vo.AccomBuildingImage">
			<result column="accom_building_image_name" property="accomBuildingImageName"/>
			<result column="accom_building_image_ext" property="accomBuildingImageExt"/>
		</collection>
		<collection property="accomBuildingFacilityList" ofType="com.gdu.voyage.vo.AccomBuildingFacility">
			<result column="accom_building_facility_name" property="accomBuildingFacilityName"/>
		</collection>
		<collection property="hashtagList" ofType="com.gdu.voyage.vo.Hashtag">
			<result column="hashtag" property="hashtag"/>
		</collection>
	</resultMap>

	<!-- 숙소-건물 인기 시설 조회를 위한 resultMap -->
	<resultMap type="map" id="resultAccomFacilityByBest">
		<result column="accom_building_facility_name" property="accomBuildingFacilityName"/>
		<result column="COUNT(accom_building_facility_name)" property="accomBuildingFacilityBest"/>
	</resultMap>
	
	<!-- 숙소-건물 인기 지역 조회를 위한 resultMap -->
	<resultMap type="map" id="resultAccomAddressByBest">
		<result column="SUBSTRING_INDEX(accom_address_zip, ' ', 1)" property="accomAddressZip"/>
		<result column="COUNT(accom_address_zip)" property="accomAddressZipBest"/>
	</resultMap>
	
	<!-- 숙소-건물-객실 목록/상세 조회를 위한 resultMap -->
	<resultMap type="com.gdu.voyage.vo.AccomRoom" id="resultAccomRoom">
		<!-- room -->
		<id column="accom_room_no" property="accomRoomNo"/>
		<result column="accom_building_no" property="accomBuildingNo"/>
		<result column="host_no" property="hostNo"/>
		<result column="accom_room_name" property="accomRoomName"/>
		<result column="accom_room_price" property="accomRoomPrice"/>
		<result column="accom_room_description" property="accomRoomDescription"/>
		<result column="accom_room_stan" property="accomRoomStan"/>
		<result column="accom_room_max" property="accomRoomMax"/>
		<result column="accom_room_state" property="accomRoomState"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<!-- building -->
		<association property="accomBuilding" javaType="com.gdu.voyage.vo.AccomBuilding">
			<result column="accom_building_name" property="accomBuildingName"/>
			<result column="accom_building_description" property="accomBuildingDescription"/>
			<result column="accom_building_phone" property="accomBuildingPhone"/>
		</association>
		<!-- building-facility -->
		<collection property="accomBuildingFacilityList" ofType="com.gdu.voyage.vo.AccomBuildingFacility">
			<result column="accom_building_facility_name" property="accomBuildingFacilityName"/>
		</collection>
		<!-- image -->
		<collection property="accomRoomImageList" ofType="com.gdu.voyage.vo.AccomRoomImage">
			<result column="accom_room_image_name" property="accomRoomImageName"/>
			<result column="accom_room_image_ext" property="accomRoomImageExt"/>
		</collection>
		<!-- item -->
		<collection property="accomRoomItemList" ofType="com.gdu.voyage.vo.AccomRoomItem">
			<result column="accom_room_item_name" property="accomRoomItemName"/>
			<result column="accom_room_item_qnt" property="accomRoomItemQnt"/>
			<result column="accom_room_item_price" property="accomRoomItemPrice"/>
		</collection>
		<!-- hashtag -->
		<collection property="hashtagList" ofType="com.gdu.voyage.vo.Hashtag">
			<id column="hashtag" property="hashtag"/>
		</collection>
	</resultMap>
	
	
	<!-- 체험 목록/상세 조회를 위한 resultMap -->
	<resultMap type="com.gdu.voyage.vo.Activity" id="resultActivity">
		<id column="activity_no" property="activityNo"/>
		<result column="host_no" property="hostNo"/>
		<result column="activity_name" property="activityName"/>
		<result column="activity_open_date" property="activityOpenDate"/>
		<result column="activity_close_date" property="activityCloseDate"/>
		<result column="activity_price" property="activityPrice"/>
		<result column="activity_open_hour" property="activityOpenHour"/>
		<result column="activity_close_hour" property="activityCloseHour"/>
		<result column="activity_max_t" property="activityMaxT"/>
		<result column="activity_max_p" property="activityMaxP"/>
		<result column="activity_description" property="activityDescription"/>
		<result column="activity_phone" property="activityPhone"/>
		<result column="activity_state" property="activityState"/>
		<result column="activity_state_admin" property="activityStateAdmin"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="cnt" property="cnt"/>
		<association property="activityAddress" javaType="com.gdu.voyage.vo.ActivityAddress">
			<result column="activity_address_zip" property="activityAddressZip"/>
			<result column="activity_address_detail" property="activityAddressDetail"/>
		</association>
		<collection property="activitySpotList" ofType="com.gdu.voyage.vo.ActivitySpot">
			<result column="activity_spot_no" property="activitySpotNo"/>
			<result column="activity_spot_name" property="activitySpotName"/>
			<result column="activity_spot_category" property="activitySpotCategory"/>
			<result column="activity_spot_description" property="activitySpotDescription"/>
		</collection>
		<collection property="activityImageList" ofType="com.gdu.voyage.vo.ActivityImage">
			<result column="activity_image_name" property="activityImageName"/>
			<result column="activity_image_ext" property="activityImageExt"/>
		</collection>
		<collection property="hashtagList" ofType="com.gdu.voyage.vo.Hashtag">
			<result column="hashtag" property="hashtag"/>
		</collection>
	</resultMap>
	
	<!-- 체험 인기 지역 조회를 위한 resultMap -->
	<resultMap type="map" id="resultActivityAddressByBest">
		<result column="SUBSTRING_INDEX(activity_address_zip, ' ', 1)" property="activityAddressZip"/>
		<result column="COUNT(activity_address_zip)" property="activityAddressZipBest"/>
	</resultMap>
	
	
	<!-- 객실 예약 정보 전체 조회를 위한 resultMap -->
<!-- 	<resultMap type="com.gdu.voyage.vo.AccomPayment" id="resultAccomPayment"> -->
<!-- 		<id column="accom_payment_no" property="accomPaymentNo"/> -->
<!-- 		<result column="accom_room_no" property="accomRoomNo"/> -->
<!-- 		<result column="member_id" property="memberId"/> -->
<!-- 		<result column="host_no" property="hostNo"/> -->
<!-- 		<result column="accom_checkin" property="accomCheckin"/> -->
<!-- 		<result column="accom_checkout" property="accomCheckout"/> -->
<!-- 		<result column="accom_amount" property="accomAmount"/> -->
<!-- 		<result column="accom_use_person" property="accomUsePerson"/> -->
<!-- 		<result column="accom_payment_state" property="accomPaymentState"/> -->
<!-- 		<result column="receipt" property="receipt"/> -->
<!-- 		<result column="create_date" property="createDate"/> -->
<!-- 		<result column="update_date" property="updateDate"/> -->
<!-- 	</resultMap> -->
	
	
	<!-- 숙소-건물 목록 조회 -->
    <select id="selectAccomBuildingList" resultMap="resultAccomBuilding">
        SELECT 
            <choose>
                <when test="count == 1">
                    count(*) cnt
                </when>
                <otherwise>
                    ab.*, aba.*, abf.*, abi.*, abs.*, h.*, abr.*
                </otherwise>
            </choose>
        FROM 
            (SELECT * FROM accom_building) ab,
            (SELECT accom_building_no, GROUP_CONCAT(accom_address_zip) accom_address_zip FROM accom_address GROUP BY accom_building_no) aba,
            (SELECT accom_building_no, GROUP_CONCAT(accom_building_facility_name SEPARATOR ', ') accom_building_facility_name FROM accom_building_facility GROUP BY accom_building_no) abf,
            (SELECT accom_building_no, CONCAT_WS('.',accom_building_image_name,accom_building_image_ext) accom_building_image_name FROM accom_building_image GROUP BY accom_building_no) abi,
            (SELECT accom_building_no, GROUP_CONCAT(accom_building_spot_name SEPARATOR ', ') accom_building_spot_name FROM accom_building_spot GROUP BY accom_building_no) abs,
            (SELECT iden_no, GROUP_CONCAT('#',hashtag SEPARATOR ' ') hashtag FROM hashtag GROUP BY iden_no) h,
            (SELECT accom_building_no, COUNT(*) roomCnt FROM accom_room WHERE accom_room_state = '공개' GROUP BY accom_building_no) abr
        WHERE 
            accom_building_state_admin = '승인완료' AND
            accom_building_state = '공개' AND
            ab.accom_building_no = aba.accom_building_no AND
            ab.accom_building_no = abf.accom_building_no AND
            ab.accom_building_no = abi.accom_building_no AND
            ab.accom_building_no = abs.accom_building_no AND
            ab.accom_building_no = h.iden_no AND
            ab.accom_building_no = abr.accom_building_no
        ORDER BY 
            update_date DESC
        <if test="count == null">
            LIMIT
                #{beginRow}, #{ROW_PER_PAGE}
        </if>
    </select>
	
	<!-- 숙소-시설 인기 시설 조회 -->
   <select id="selectAccomBuildingFacilityByBest" resultMap="resultAccomFacilityByBest">
      SELECT
         accom_building_facility_name,
         COUNT(accom_building_facility_name)
      FROM
         accom_building_facility abf
         JOIN accom_building ab ON abf.accom_building_no = ab.accom_building_no
      WHERE NOT ab.accom_building_state = '비공개'
      GROUP BY
         accom_building_facility_name
      ORDER BY
         COUNT(accom_building_facility_name) DESC
      LIMIT
         0, 6;
   </select>
	
	<!-- 숙소-주소 인기 지역 조회 -->
	<select id="selectAccomAddressByBest" resultMap="resultAccomAddressByBest">
		SELECT
			SUBSTRING_INDEX(accom_address_zip, ' ', 1),
			COUNT(accom_address_zip)
		FROM
			accom_address
		GROUP BY
			SUBSTRING_INDEX(accom_address_zip, ' ', 1)
		ORDER BY
			COUNT(accom_address_zip) DESC
		LIMIT
			0, 8;
	</select>
	
	<!-- 숙소-건물 목록 검색 조회 -->
   <select id="selectAccomBuildingListBySearch" parameterType="Map" resultMap="resultAccomBuilding">
      SELECT 
                    ab.*, aba.*, abf.*, abi.*, abs.*, h.* , abr.*, abrCnt.*
      FROM 
         (SELECT * FROM accom_building) ab,
         (SELECT accom_building_no, GROUP_CONCAT(accom_address_zip) accom_address_zip FROM accom_address GROUP BY accom_building_no) aba,
         (SELECT accom_building_no, GROUP_CONCAT(accom_building_facility_name SEPARATOR ', ') accom_building_facility_name FROM accom_building_facility GROUP BY accom_building_no) abf,
         (SELECT accom_building_no, CONCAT_WS('.',accom_building_image_name,accom_building_image_ext) accom_building_image_name FROM accom_building_image GROUP BY accom_building_no) abi,
         (SELECT accom_building_no, GROUP_CONCAT(accom_building_spot_name SEPARATOR ', ') accom_building_spot_name FROM accom_building_spot GROUP BY accom_building_no) abs,
         (SELECT iden_no, GROUP_CONCAT('#',hashtag SEPARATOR ' ') hashtag FROM hashtag GROUP BY iden_no) h,
         (SELECT accom_building_no, accom_room_price FROM accom_room WHERE accom_room_state = '공개' GROUP BY accom_building_no, accom_room_price) abr,
         (SELECT accom_building_no, COUNT(*) roomCnt FROM accom_room WHERE accom_room_state = '공개' GROUP BY accom_building_no) abrCnt
         
      WHERE 
         accom_building_state_admin = '승인완료' AND
         accom_building_state = '공개' AND
         ab.accom_building_no = aba.accom_building_no AND
         ab.accom_building_no = abf.accom_building_no AND
         ab.accom_building_no = abi.accom_building_no AND
         ab.accom_building_no = abs.accom_building_no AND
         ab.accom_building_no = h.iden_no AND
         ab.accom_building_no = abr.accom_building_no AND
         ab.accom_building_no = abrCnt.accom_building_no
         AND
         <!-- 입렵(해시태그, 건물 이름, 건물 소개글) 검색 -->
         <if test='#{searchWord} != null'>            
            (h.hashtag LIKE '%${searchWord}%' OR
            ab.accom_building_name LIKE '%${searchWord}%' OR
            ab.accom_building_description LIKE '%${searchWord}%' OR
            aba.accom_address_zip LIKE '%${searchWord}%' OR   
            abf.accom_building_facility_name LIKE '%${searchWord}%')
         </if>
         AND
         <!-- 지역 검색 -->
         <if test='#{searchAccomAddress} != null'>
            (aba.accom_address_zip LIKE '%${searchAddress}%')   
            AND   
         </if>
         <if test='#{searchFacilityList} != null'>
            (abf.accom_building_facility_name REGEXP '${searchFacilityList}')
            AND
         </if>            
            <![CDATA[
            abr.accom_room_price >= #{minPrice}
            AND
            abr.accom_room_price <= #{maxPrice}
            ]]>
               GROUP BY accom_building_name      
      ORDER BY
         update_date DESC
            LIMIT
                #{beginRow}, #{ROW_PER_PAGE}
   </select>
   
   <!-- 숙소-건물 목록 검색 조회 -->
   <select id="selectAccomBuildingListBySearchCount" parameterType="Map" resultType="int">
      SELECT 
                    count(*)
      FROM(
      SELECT
      	accom_building_name
      FROM 
         (SELECT * FROM accom_building) ab,
         (SELECT accom_building_no, GROUP_CONCAT(accom_address_zip) accom_address_zip FROM accom_address GROUP BY accom_building_no) aba,
         (SELECT accom_building_no, GROUP_CONCAT(accom_building_facility_name SEPARATOR ', ') accom_building_facility_name FROM accom_building_facility GROUP BY accom_building_no) abf,
         (SELECT accom_building_no, CONCAT_WS('.',accom_building_image_name,accom_building_image_ext) accom_building_image_name FROM accom_building_image GROUP BY accom_building_no) abi,
         (SELECT accom_building_no, GROUP_CONCAT(accom_building_spot_name SEPARATOR ', ') accom_building_spot_name FROM accom_building_spot GROUP BY accom_building_no) abs,
         (SELECT iden_no, GROUP_CONCAT('#',hashtag SEPARATOR ' ') hashtag FROM hashtag GROUP BY iden_no) h,
         (SELECT accom_building_no, accom_room_price FROM accom_room WHERE accom_room_state = '공개' GROUP BY accom_building_no, accom_room_price) abr,
         (SELECT accom_building_no, COUNT(*) roomCnt FROM accom_room WHERE accom_room_state = '공개' GROUP BY accom_building_no) abrCnt
         
      WHERE 
         accom_building_state_admin = '승인완료' AND
         accom_building_state = '공개' AND
         ab.accom_building_no = aba.accom_building_no AND
         ab.accom_building_no = abf.accom_building_no AND
         ab.accom_building_no = abi.accom_building_no AND
         ab.accom_building_no = abs.accom_building_no AND
         ab.accom_building_no = h.iden_no AND
         ab.accom_building_no = abr.accom_building_no AND
         ab.accom_building_no = abrCnt.accom_building_no
         AND
         <!-- 입렵(해시태그, 건물 이름, 건물 소개글) 검색 -->
         <if test='#{searchWord} != null'>            
            (h.hashtag LIKE '%${searchWord}%' OR
            ab.accom_building_name LIKE '%${searchWord}%' OR
            ab.accom_building_description LIKE '%${searchWord}%' OR
            aba.accom_address_zip LIKE '%${searchWord}%' OR   
            abf.accom_building_facility_name LIKE '%${searchWord}%')
         </if>
         AND
         <!-- 지역 검색 -->
         <if test='#{searchAccomAddress} != null'>
            (aba.accom_address_zip LIKE '%${searchAddress}%')   
            AND   
         </if>
         <if test='#{searchFacilityList} != null'>
            (abf.accom_building_facility_name REGEXP '${searchFacilityList}')
            AND
         </if>            
            <![CDATA[
            abr.accom_room_price >= #{minPrice}
            AND
            abr.accom_room_price <= #{maxPrice}
            ]]>
               GROUP BY accom_building_name) a
   </select>
   
    <!-- 숙소-건물 상세 조회 -->
	<select id="selectAccomBuildingOne" parameterType="int" resultMap="resultAccomBuilding">
		SELECT       
			a.*, abf.*, abi.*, abs.*, aba.*, h.*, abr.*          
		FROM      
			accom_building a,
			(SELECT * FROM accom_building_facility WHERE accom_building_no = #{accomBuildingNo}) abf,
			(SELECT * FROM accom_building_image WHERE accom_building_no = #{accomBuildingNo}) abi,
			(SELECT * FROM accom_building_spot WHERE accom_building_no = #{accomBuildingNo}) abs,
			(SELECT * FROM accom_address WHERE accom_building_no = #{accomBuildingNo}) aba,
			(SELECT * FROM hashtag WHERE iden_no = #{accomBuildingNo}) h,
			(SELECT *, COUNT(*) roomCnt FROM accom_room WHERE accom_building_no = #{accomBuildingNo} AND accom_room_state = '공개') abr
			                                     
		WHERE                                      
			a.accom_building_state_admin = '승인완료'
			AND a.accom_building_state = '공개'
			AND a.accom_building_no = abf.accom_building_no
			AND a.accom_building_no = abi.accom_building_no
			AND a.accom_building_no = abs.accom_building_no
			AND a.accom_building_no = aba.accom_building_no
			AND a.accom_building_no = h.iden_no
			AND a.accom_building_no = abr.accom_building_no
	</select>
	
	<!-- 숙소-건물-객실 목록 조회 -->
	<select id="selectAccomRoomList" parameterType="int" resultMap="resultAccomRoom">
		SELECT 
			ar.*, ari.*, art.*, h.*
		FROM 
			(SELECT * FROM accom_room) ar,
			(SELECT accom_room_no, CONCAT_WS('.',accom_room_image_name,accom_room_image_ext) accom_room_image_name FROM accom_room_image GROUP BY accom_room_no) ari,
			(SELECT accom_room_no, GROUP_CONCAT(accom_room_item_name) accom_room_item_name FROM accom_room_item GROUP BY accom_room_no) art,
			(SELECT iden_no, GROUP_CONCAT('#',hashtag SEPARATOR ' ') hashtag FROM hashtag GROUP BY iden_no) h
		WHERE 
			ar.accom_building_no = #{accomBuildingNo} AND
			ar.accom_room_state = '공개' AND
			ar.accom_room_no = ari.accom_room_no AND
			ar.accom_room_no = art.accom_room_no AND
			ar.accom_room_no = h.iden_no
		ORDER BY 
			ar.update_date DESC;
	</select>
	
	<!-- 숙소-건물-객실 상세 조회 -->
	<select id="selectAccomRoomOne" parameterType="int" resultMap="resultAccomRoom">
		SELECT      
			ar.*, ab.*, abf.*, ari.*, art.*, h.*         
		FROM      
			accom_room ar,
			(SELECT * FROM accom_building) ab,
			(SELECT * FROM accom_building_facility) abf,
			(SELECT * FROM accom_room_image WHERE accom_room_no = #{accomRoomNo}) ari,
			(SELECT * FROM accom_room_item WHERE accom_room_no = #{accomRoomNo}) art,
			(SELECT * FROM hashtag WHERE iden_no = #{accomRoomNo}) h
		WHERE                                      
			ar.accom_room_state = '공개' AND
			ar.accom_building_no = ab.accom_building_no AND
			ab.accom_building_no = abf.accom_building_no AND
			ar.accom_room_no = ari.accom_room_no AND
			ar.accom_room_no = art.accom_room_no AND
			ar.accom_room_no = h.iden_no
	</select>
	
	
	<!-- 체험 목록 조회 -->
	<select id="selectActivityList" resultMap="resultActivity">
		SELECT 
			<choose>
                <when test="count == 1">
                    count(*) cnt
                </when>
                <otherwise>
					ac.*, aca.*, aci.*, acs.*, h.*
				</otherwise>
            </choose>
		FROM 
			(SELECT * FROM activity) ac,
			(SELECT activity_no, GROUP_CONCAT(activity_address_zip) activity_address_zip FROM activity_address GROUP BY activity_no) aca,
			(SELECT activity_no, CONCAT_WS('.',activity_image_name,activity_image_ext) activity_image_name FROM activity_image GROUP BY activity_no) aci,
			(SELECT activity_no, GROUP_CONCAT(activity_spot_name SEPARATOR ', ') activity_spot_name FROM activity_spot GROUP BY activity_no) acs,
			(SELECT iden_no, GROUP_CONCAT('#',hashtag SEPARATOR ' ') hashtag FROM hashtag GROUP BY iden_no) h
		WHERE 
			activity_state_admin = '승인완료' AND
			activity_state = '공개' AND
			ac.activity_no = aca.activity_no AND
			ac.activity_no = aci.activity_no AND
			ac.activity_no = acs.activity_no AND
			ac.activity_no = h.iden_no
		ORDER BY
			update_date DESC
		<if test="count == null">
            LIMIT
                #{beginRow}, #{ROW_PER_PAGE}
        </if>
	</select>
	
	<!-- 체험-주소 인기 지역 조회 -->
	<select id="selectActivityAddressByBest" resultMap="resultActivityAddressByBest">
		SELECT
			SUBSTRING_INDEX(activity_address_zip, ' ', 1),
			COUNT(activity_address_zip)
		FROM
			activity_address
		GROUP BY
			SUBSTRING_INDEX(activity_address_zip, ' ', 1)
		ORDER BY
			COUNT(activity_address_zip) DESC
		LIMIT
			0, 8;
	</select>
	
	<!-- 수정수정 -->
	<!-- 체험 목록 검색 조회 -->
   <select id="selectActivityListBySearch" parameterType="Map" resultMap="resultActivity">
      SELECT 
	       ac.*, aca.*, aci.*, acs.*, h.*
      FROM 
         (SELECT * FROM activity) ac,
         (SELECT activity_no, GROUP_CONCAT(activity_address_zip) activity_address_zip FROM activity_address GROUP BY activity_no) aca,
         (SELECT activity_no, CONCAT_WS('.',activity_image_name,activity_image_ext) activity_image_name FROM activity_image GROUP BY activity_no) aci,
         (SELECT activity_no, GROUP_CONCAT(activity_spot_name SEPARATOR ', ') activity_spot_name FROM activity_spot GROUP BY activity_no) acs,
         (SELECT iden_no, GROUP_CONCAT('#',hashtag SEPARATOR ' ') hashtag FROM hashtag GROUP BY iden_no) h
      WHERE 
         activity_state_admin = '승인완료' AND
         activity_state = '공개' AND
         ac.activity_no = aca.activity_no AND
         ac.activity_no = aci.activity_no AND
         ac.activity_no = acs.activity_no AND
         ac.activity_no = h.iden_no
         
         <!-- 입력(해시태그, 체험 이름, 체험 소개글) 검색 -->
         <if test="#{searchWord} != null">
            AND
            (h.hashtag LIKE '%${searchWord}%' OR
            ac.activity_name LIKE '%${searchWord}%' OR
            ac.activity_description LIKE '%${searchWord}%' OR
            aca.activity_address_zip LIKE '%${searchWord}%')
         </if>
         
         <!-- 지역 검색 -->
         <if test="#{searchAccomAddress} != null">
            AND
            (aca.activity_address_zip LIKE '%${searchAddress}%')      
         </if>
         AND
          <![CDATA[
            ac.activity_price >= #{minPrice}
            AND
            ac.activity_price <= #{maxPrice}
            ]]>
               GROUP BY activity_name 
      ORDER BY
         update_date DESC
            LIMIT
                #{beginRow}, #{ROW_PER_PAGE}
   </select>
   
   <!-- 수정수정 -->
   <!-- 체험 목록 검색 조회 -->
   <select id="selectActivityListBySearchCount" parameterType="Map" resultType="int">
      SELECT 
              count(*)
       FROM(
      SELECT
      	activity_name
      FROM 
         (SELECT * FROM activity) ac,
         (SELECT activity_no, GROUP_CONCAT(activity_address_zip) activity_address_zip FROM activity_address GROUP BY activity_no) aca,
         (SELECT activity_no, CONCAT_WS('.',activity_image_name,activity_image_ext) activity_image_name FROM activity_image GROUP BY activity_no) aci,
         (SELECT activity_no, GROUP_CONCAT(activity_spot_name SEPARATOR ', ') activity_spot_name FROM activity_spot GROUP BY activity_no) acs,
         (SELECT iden_no, GROUP_CONCAT('#',hashtag SEPARATOR ' ') hashtag FROM hashtag GROUP BY iden_no) h
      WHERE 
         activity_state_admin = '승인완료' AND
         activity_state = '공개' AND
         ac.activity_no = aca.activity_no AND
         ac.activity_no = aci.activity_no AND
         ac.activity_no = acs.activity_no AND
         ac.activity_no = h.iden_no
         
         <!-- 입력(해시태그, 체험 이름, 체험 소개글) 검색 -->
         <if test="#{searchWord} != null">
            AND
            (h.hashtag LIKE '%${searchWord}%' OR
            ac.activity_name LIKE '%${searchWord}%' OR
            ac.activity_description LIKE '%${searchWord}%' OR
            aca.activity_address_zip LIKE '%${searchWord}%')
         </if>
         
         <!-- 지역 검색 -->
         <if test="#{searchAccomAddress} != null">
            AND
            (aca.activity_address_zip LIKE '%${searchAddress}%')      
         </if>
         AND
          <![CDATA[
            ac.activity_price >= #{minPrice}
            AND
            ac.activity_price <= #{maxPrice}
            ]]>
               GROUP BY activity_name ) A
   </select>
	
	<!-- 체험 상세 조회 -->
<!-- 	<select id="selectActivityOne" parameterType="int" resultMap="resultActivity"> -->
<!-- 		SELECT  -->
<!-- 			ac.*, aca.*, aci.*, acs.*, h.* -->
<!-- 		FROM  -->
<!-- 			(SELECT * FROM activity) ac, -->
<!-- 			(SELECT activity_no, GROUP_CONCAT(activity_address_zip) activity_address_zip FROM activity_address GROUP BY activity_no) aca, -->
<!-- 			(SELECT activity_no, GROUP_CONCAT(CONCAT_WS('.',activity_image_name,activity_image_ext)) activity_image FROM activity_image GROUP BY activity_no) aci, -->
<!-- 			(SELECT activity_no, GROUP_CONCAT(activity_spot_name SEPARATOR ', ') activity_spot_name FROM activity_spot GROUP BY activity_no) acs, -->
<!-- 			(SELECT iden_no, GROUP_CONCAT(hashtag SEPARATOR ' ') hashtag FROM hashtag GROUP BY iden_no) h -->
<!-- 		WHERE  -->
<!-- 			activity_state_admin = '승인완료' AND -->
<!-- 			activity_state = '공개' AND -->
<!-- 			ac.activity_no = #{activityNo} AND -->
<!-- 			ac.activity_no = aca.activity_no AND -->
<!-- 			ac.activity_no = aci.activity_no AND -->
<!-- 			ac.activity_no = acs.activity_no AND -->
<!-- 			ac.activity_no = h.iden_no -->
<!-- 		ORDER BY -->
<!-- 			update_date DESC; -->
<!-- 	</select> -->

	<!-- 체험 상세 조회 -->
	<select id="selectActivityOne" parameterType="int" resultMap="resultActivity">
		SELECT             
			a.*, acs.*, aci.*, aca.*, h.*
		FROM      
			activity a,
			(SELECT * FROM activity_spot WHERE activity_no = #{activityNo}) acs,
			(SELECT * FROM activity_image WHERE activity_no = #{activityNo}) aci,
			(SELECT * FROM activity_address WHERE activity_no = #{activityNo}) aca,
			(SELECT * FROM hashtag WHERE iden_no = #{activityNo}) h
			                                     
		WHERE                                      
			a.activity_state_admin = '승인완료'
			AND a.activity_state = '공개'
			AND a.activity_no = acs.activity_no
			AND a.activity_no = aci.activity_no
			AND a.activity_no = aca.activity_no
			AND a.activity_no = h.iden_no
	</select>


	<!-- 객실 예약 내역 전체 조회 -->
	<select id="selectAccomRoomReserveDay" parameterType="int" resultType="map">
		SELECT 
			SUBSTR(accom_checkin, 1, 10) accomCheckIn,
			SUBSTR(accom_checkout, 1, 10) accomCheckOut
		FROM 
			accom_payment
		WHERE 
			accom_room_no=#{accomRoomNo}
	</select>

	<!-- 숙소 예약 -->
	<insert id="insertAccomPayment" parameterType="com.gdu.voyage.vo.AccomPayment">
		INSERT INTO accom_payment (
			accom_room_no,
			member_id,
			host_no,
			accom_checkin,
			accom_checkout,
			accom_amount,
			accom_use_person,
			accom_payment_state,
			receipt,
			create_date,
			update_date
		) VALUES (
			#{accomRoomNo},
			#{memberId},
			#{hostNo},
			#{accomCheckIn},
			#{accomCheckOut},
			#{accomAmount},
			#{accomUsePerson},
			'결제대기',
			'명세',
			NOW(),
			NOW()
		)
		<selectKey keyProperty="accomPaymentNo" order="AFTER" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- 체험 예약 내역 전체 조회 -->
	<select id="selectActivityReserveDay" parameterType="int" resultType="map">
		SELECT 
			SUBSTR(accom_checkin, 1, 10) accomCheckIn,
			SUBSTR(accom_checkout, 1, 10) accomCheckOut
		FROM 
			accom_payment
		WHERE
			accom_room_no=#{accomRoomNo}
	</select>

	<!-- 체험 예약 -->
	<insert id="insertActivityPayment" parameterType="com.gdu.voyage.vo.ActivityPayment">
		INSERT INTO accom_payment (
			accom_room_no,
			member_id,
			host_no,
			accom_checkin,
			accom_checkout,
			accom_amount,
			accom_use_person,
			accom_payment_state,
			receipt,
			create_date,
			update_date
		) VALUES (
			#{accomRoomNo},
			#{memberId},
			#{hostNo},
			#{accomCheckIn},
			#{accomCheckOut},
			#{accomAmount},
			#{accomUsePerson},
			'결제대기',
			'명세',
			NOW(),
			NOW()
		)
		<selectKey keyProperty="activityPaymentNo" order="AFTER" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
</mapper>