<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.voyage.mapper.ChatMapper">
	<!-- [사용자] 나의 채팅 목록 조회를 위한 resultMap -->
	<!-- 1. 채팅번호와 채팅방 번호를 조회하기 위한 resultMap -->
	<resultMap type="com.gdu.voyage.vo.Chat" id="resultChatNo">
		<id column="max_no" property="chatNo"/>
		<result column="chat_room" property="chatRoom"/>
		<result column="max_date" property="createDate"/>
	</resultMap>
	
	<resultMap type="com.gdu.voyage.vo.Chat" id="resultChat">
		<!-- Chat -->
		<id column="chat_no" property="chatNo"/>
		<result column="chat_room" property="chatRoom"/>
		<result column="to_member_id" property="toMemberId"/>
		<result column="from_member_id" property="fromMemberId"/>
		<result column="chat_content" property="chatContent"/>
		<result column="create_date" property="createDate"/>
		<result column="chat_read" property="chatRead"/>
		<!-- Member -->
		<association property="member" javaType="com.gdu.voyage.vo.Member">
			<id column="member_id" property="memberId"/>
			<result column="member_nickname" property="memberNickname"/>
			<result column="member_level" property="memberLevel"/>
		</association>
	</resultMap>
	
	<!-- [사용자] 나의 채팅 목록 조회  -->
	<!-- 1. 채팅번호와 채팅방 번호를 조회해줌 -->
	<select id="selectChatNumListById" parameterType="String" resultMap="resultChatNo">
		SELECT t.*
		FROM (
			SELECT
				MAX(chat_no) max_no,
				chat_room,
				MAX(create_date) max_date
			FROM
				chat
			WHERE
				to_member_id = #{memberId} OR from_member_id = #{memberId}
			GROUP BY 
				chat_room
		) t
		ORDER BY t.max_date DESC
	</select>
	<!-- 2. 해당 번호를 가지고 있는 채팅을 조회 -->
	<!-- 해당 채팅 번호를 조회했을 때 얻을 수 있는 두개의 닉네임 중에 자신의 닉네임이 아닌 것을 출력  -->
	<select id="selectChatListByNo" parameterType="Map" resultMap="resultChat">
		SELECT
			c.chat_no,
			c.chat_room,
			c.to_member_id,
			c.from_member_id,
			c.chat_content,
			c.create_date,
			c.chat_read,
			m.member_nickname,
			m.member_level
		FROM
			chat c
			LEFT JOIN member m
			ON c.to_member_id = m.member_id OR c.from_member_id = m.member_id
		WHERE
			c.chat_no = #{chatNo} AND (NOT m.member_nickname IN(#{memberNickname}))
	</select>
	
	
	<!-- [사용자] 채팅방 접속 시 채팅 내용 조회  -->
	<select id="selectChatByToChatRoom" parameterType="Map" resultType="java.util.Map">
		SELECT
			c.chat_no chatNo,
			c.chat_room chatRoom,
			c.to_member_id toMemberId,
			c.from_member_id fromMemberId,
			c.chat_content chatContent,
			c.create_date createDate,
			c.chat_read chatRead,
			m.member_nickname memberNickname,
			m.member_level memberLevel
		FROM
			chat c
			LEFT JOIN member m
			ON c.to_member_id = m.member_id OR c.from_member_id = m.member_id
		WHERE
			c.chat_room = #{chatRoom} AND (NOT m.member_nickname IN(#{memberNickname}))
	</select>
	
	<!-- [사용자] 채팅 보내기 -->
	<insert id="insertChat" parameterType="com.gdu.voyage.vo.Chat">
		INSERT INTO chat(
			chat_room,
			to_member_id,
			from_member_id,
			chat_content,
			create_date
		) VALUES (
			#{chatRoom},
			#{toMemberId},
			#{fromMemberId},
			#{chatContent},
			NOW()
		)
	</insert>
</mapper>