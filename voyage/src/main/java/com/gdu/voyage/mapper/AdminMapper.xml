<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.voyage.mapper.AdminMapper">

   <!-- 어드민회원가입 (주소) -->
   <insert id="insertAdminAddress" parameterType="com.gdu.voyage.vo.AdminAddress">
   INSERT INTO
      admin_address(
      admin_id,
      admin_address_postal_code,
      admin_address_zip,
      admin_address_detail,
      create_date,
      update_date
      )
   VALUES(
      #{adminId},
      #{adminAddressPostalCode},
      #{adminAddressZip},
      #{adminAddressDetail},
      NOW(),
      NOW()
      );
   </insert>
   <!-- 어드민 회원가입 -->
   <insert id="insertAdmin" parameterType="com.gdu.voyage.vo.Admin">
   INSERT INTO
      admin(
      admin_id,
      admin_first_name,
      admin_last_name,
      admin_phone,
      admin_email,
      admin_active,
      create_date,
      update_date
      )
   VALUES(
      #{adminId},
      #{adminFirstName},
      #{adminLastName},
      #{adminPhone},
      #{adminEmail},
      #{adminActive},
      NOW(),
      NOW()
      );
   </insert>
   <!-- 어드민 정보 수정 -->
   <update id="updateAdmin">
   UPDATE admin
   set
      admin_first_name = #{adminFirstName},
      admin_last_name = #{adminLastName},
      admin_phone = #{adminPhone},
      admin_email = #{adminEmail},
      update_date = NOW()
   WHERE
      admin_id = #{adminId}
   </update>
   <!-- 어드민 주소 정보 수정 -->
   <update id="updateAdminAddress">
   UPDATE admin_address
   set
      admin_address_postal_code = #{adminAddressPostalCode},
      admin_address_zip = #{adminAddressZip},
      admin_address_detail = #{adminAddressDetail},
      update_date = NOW()
   WHERE
      admin_id = #{adminId}
   </update>
   <resultMap type="com.gdu.voyage.vo.MemberAddress" id="memberAddress">
      <result column="member_address_postal_code" property="memberAddressPostalCode" />
      <result column="member_address_zip" property="memberAddressZip" />
      <result column="member_address_detail" property="memberAddressDetail" />
      <result column="create_date" property="createDate" />
      <result column="update_date" property="updateDate" />
   </resultMap>

   <resultMap type="com.gdu.voyage.vo.Member" id="member">
      <result column="member_id" property="memberId" />
      <result column="member_first_name" property="memberFirstName" />
      <result column="member_last_name" property="memberLastName" />
      <result column="member_nickname" property="memberNickname" />
      <result column="member_phone" property="memberPhone" />
      <result column="member_email" property="memberEmail" />
      <result column="member_reg" property="memberReg" />
      <result column="member_description" property="memberDescription" />
      <result column="member_level" property="memberLevel" />
      <result column="member_active" property="memberActive" />
      <result column="create_date" property="createDate" />
      <result column="update_date" property="updateDate" />
      <result column="last_login" property="lastLogin" />
      <collection property="memberAddress" resultMap="memberAddress" />
   </resultMap>

   <!-- 멤버 리스트 출력 -->
   <select id="selectMemberList" parameterType="com.gdu.voyage.vo.Member" resultMap="member">
   SELECT
      member_id,
      member_pw,
      member_first_name,
      member_last_name,
      member_nickname,
      member_level,
      member_active
   FROM
      member
   LIMIT
      #{beginRow}, #{rowPerPage}
   </select>
   <!-- 멤버 상세보기 -->
   <select id="selectMemberOne" parameterType="com.gdu.voyage.vo.Member" resultMap="member">
   SELECT
      m.member_id,
      m.member_pw,
      m.member_first_name,
      m.member_last_name,
      m.member_nickname,
      m.member_phone,
      m.member_email,
      m.member_reg,
      m.member_description,
      m.member_level,
      m.member_active,
      m.create_date,
      m.update_date,
      m.last_login,
      a.member_address_postal_code,
      a.member_address_zip,
      a.member_address_detail,
      a.create_date,
      a.update_date
   FROM
      member m
   INNER JOIN
      member_address a
   ON
      m.member_id = a.member_id
      WHERE m.member_id = #{memberId}
   </select>
   <!-- 회원수 -->
   <select id="memberTotalCount" resultType="int" parameterType="com.gdu.voyage.vo.Member">
   SELECT
      COUNT(*)
   FROM
      member
   </select>
   <!-- 회원 등급/상태 수정 -->
   <update id="updateMember" parameterType="com.gdu.voyage.vo.Member">
   UPDATE member
   set
      member_level = #{memberLevel},
      member_active = #{memberActive},
      update_date = Now()
   WHERE
      member_id = #{memberId}
   </update>
   <resultMap type="com.gdu.voyage.vo.HostAsk" id="HostAsk">
      <id column="host_ask_no" property="hostAskNo"></id>
      <id column="member_id" property="memberId"></id>
      <id column="host_reg" property="hostReg"></id>
      <id column="create_date" property="createDate"></id>
      <id column="ask_state" property="askState"></id>
   </resultMap>

   <resultMap type="com.gdu.voyage.vo.Host" id="Host">
      <id column="host_no" property="hostNo"></id>
      <id column="member_id" property="memberId"></id>
      <id column="admin_id" property="adminId"></id>
      <id column="host_state" property="hostState"></id>
      <id column="create_date" property="createDate"></id>
   </resultMap>
   <!-- 사업자 등록한 List -->
   <select id="selectHostAskList" parameterType="com.gdu.voyage.vo.HostAsk" resultMap="HostAsk">
   SELECT
      host_ask_no,
      member_id,
      host_reg,
      create_date,
      ask_state
   FROM
      host_ask
      ORDER BY
      ask_state = '승인거부',
      ask_state = '승인완료'    
   LIMIT
      #{beginRow}, #{rowPerPage}
   </select>
   <!-- 사업자 신청수 -->
   <select id="hostAskTotalCount" resultType="int" parameterType="com.gdu.voyage.vo.HostAsk">
   SELECT
      COUNT(*)
   FROM
      host_ask
   </select>
   <!-- 사업자 신청 승인/거절 -->
   <update id="updateHostAsk" parameterType="com.gdu.voyage.vo.HostAsk">
   UPDATE host_ask
   set
      ask_state = #{askState}
   WHERE
      host_ask_no = #{hostAskNo}
   </update>
   <!-- 승인후 사업자 생성 -->
   <insert id="insertHost" parameterType="com.gdu.voyage.vo.Host">
   INSERT INTO
      host(
      member_id,
      admin_id,
      host_state,
      create_date
      )
   VALUES(
      #{memberId},
      #{adminId},
      '활동',
      NOW()
      )
   </insert>
   <!-- 승인후 멤버 레벨 조절 -->
   <update id="updateMemberLv" parameterType="com.gdu.voyage.vo.Member">
   UPDATE member
   set
      member_level = '1',
      update_date = Now()
   WHERE
      member_id = #{memberId}
   </update>
   <!-- 사업자 신청 상세보기 -->
   <!-- <select id="selectHostAskOne" parameterType="com.gdu.voyage.vo.HostAsk" 
      resultMap="HostAsk"> -->
   <!-- SELECT -->
   <!-- host_ask_no, -->
   <!-- member_id, -->
   <!-- host_reg, -->
   <!-- create_date, -->
   <!-- ask_state -->
   <!-- FROM -->
   <!-- host_ask -->
   <!-- WHERE -->
   <!-- host_ask_no = #{hostAskNo} -->
   <!-- </select> -->
   <!-- 사업자 리스트 -->
   <select id="selectHostList" parameterType="com.gdu.voyage.vo.Host"  resultMap="Host">
   SELECT
      host_no,
      member_id,
      admin_id,
      host_state,
      create_date
   FROM
      host
   ORDER BY
      host_state = '차단'
   </select>
   <!-- 사업자 수 -->
   <select id="hostTotalCount" resultType="int" parameterType="com.gdu.voyage.vo.Host">
   SELECT
      COUNT(*)
   FROM
      host
   </select>
   <!-- 사업자 활동 상태 수정 -->
     <update id="updateHost" parameterType="com.gdu.voyage.vo.Host">
   UPDATE host
   set
      host_state = #{hostState}
   WHERE
      host_no = #{hostNo}
   </update>
   <!-- 사업자 활동 상태가 차단으로 수정시 숙소 비공개 처리 -->
	<update id="updateAccom" parameterType="com.gdu.voyage.vo.AccomBuilding">
	UPDATE accom_building
	SET 
		accom_building_state = '비공개'
	WHERE
		host_no = #{hostNo}
	</update>
	<!-- 사업자 활동 상태가 차단으로 수정시 체험 비공개 처리 -->
	<update id="updateActivity" parameterType="com.gdu.voyage.vo.Activity">
	UPDATE activity
	SET 
		activity_state = '비공개'
	WHERE
		host_no = #{hostNo}
	</update>
</mapper>